apiVersion: v1
kind: Namespace
metadata:
  name: development
  labels:
    environment: development
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: traefik-crd
  namespace: kube-system
spec:
  chart: https://%{KUBERNETES_API}%/static/charts/traefik-crd-34.2.1+up34.2.0.tgz
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: argocd
  namespace: kube-system
spec:
  repo: https://argoproj.github.io/argo-helm
  chart: argo-cd
  targetNamespace: argocd
  createNamespace: true
  version: 7.8.18
  valuesFiles:
    - https://github.com/mcconnellj/k3s-server/applications/argocd/default.values.yaml
    - https://github.com/mcconnellj/k3s-server/applications/argocd/development.values.yaml
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: development
  namespace: argocd
spec:
  goTemplate: true
  goTemplateOptions:
  - missingkey=error
  generators:
    - matrix:
        generators:
        - git:
            repoURL: "https://github.com/mcconnellj/k3s-server.git"
            revision: main
            files:
            - path: configs/cloud-applications/applications.yaml
        - list:
            elements: []
            elementsYaml: '{{ .key.components | toJson }}'
  template:
    metadata:
      name: "{{.givenName}}-{{.environment}}-{{.clusterName}}"
    spec:
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
        - PrunePropagationPolicy=foreground
        - PrunePropagationPolicy=background
        - CreateNamespace=true
        - ServerSideApply=true
      sources:
        - chart: '{{.chart}}'
          repoURL: '{{.repoUrl}}'
          targetRevision: '{{.version}}'
          helm:
            releaseName: '{{.releaseName}}'
            valueFiles:
            - $values/applications/{{.givenName}}/default.values.yaml
            - $values/applications/{{.givenName}}/{{.environment}}.values.yaml
        - repoURL: "https://github.com/mcconnellj/k3s-server"
          targetRevision: main
          ref: values
      destination:
        namespace: '{{.environment}}'
        name: '{{.clusterName}}'